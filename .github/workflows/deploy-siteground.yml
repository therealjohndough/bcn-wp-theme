name: Deploy to SiteGround

on:
  push:
    branches: [ main ]

jobs:
  deploy:
    name: Deploy (rsync)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Prepare SSH key
        env:
          SG_DEPLOY_KEY: ${{ secrets.SG_DEPLOY_KEY }}
        run: |
          if [ -z "$SG_DEPLOY_KEY" ]; then
            echo "SG_DEPLOY_KEY secret is not set" >&2
            exit 1
          fi
          mkdir -p ~/.ssh
          echo "$SG_DEPLOY_KEY" > ~/.ssh/id_siteground
          chmod 600 ~/.ssh/id_siteground
          # add the SiteGround host key to known_hosts to avoid interactive prompts
          # HOST/PORT are hardcoded below by workflow defaults
          ssh-keyscan -p ${SG_PORT:-18765} ${SG_HOST} >> ~/.ssh/known_hosts || true

      - name: Run build (optional)
        run: |
          if [ -f package.json ]; then
            if [ -f package-lock.json ] || [ -f npm-shrinkwrap.json ]; then
              npm ci
            else
              npm install
            fi
            if npm run | grep -q " build"; then
              npm run build
            fi
          fi

      - name: Deploy with rsync
        env:
          # Only one secret required: SG_DEPLOY_KEY
          # Hardcoded deployment targets (adjust if needed)
          SG_HOST: staging6.buffalocannabisnetwork.com
          SG_USER: u2037-2lvglkrliykq
          SG_PORT: '18765'
          SG_REMOTE_PATH: /home/u2037-2lvglkrliykq/staging6.buffalocannabisnetwork.com/public_html/wp-content/themes/bcn-wp-theme
          SOURCE: './build'
          # Allow DRY_RUN to be controlled via the repository secret `DRY_RUN` (set to '0' for live deploy).
          DRY_RUN: ${{ secrets.DRY_RUN }}
        run: |
          : "Deploying $SOURCE to $SG_USER@$SG_HOST:$SG_REMOTE_PATH"
          RSYNC_OPTS='-az --delete --exclude .git --exclude node_modules --exclude .env'
          SSH_CMD="ssh -i ~/.ssh/id_siteground -p ${SG_PORT} -o IdentitiesOnly=yes -o StrictHostKeyChecking=no"
          # Default to dry-run if DRY_RUN is not set in secrets
          DRY_RUN="${DRY_RUN:-1}"
          if [ "$DRY_RUN" = "1" ] || [ -z "$DRY_RUN" ]; then
            echo "DRY RUN: rsync $RSYNC_OPTS -n -e \"$SSH_CMD\" \"${SOURCE%/}/\" \"$SG_USER@$SG_HOST:$SG_REMOTE_PATH/\""
          else
            rsync $RSYNC_OPTS -e "$SSH_CMD" "${SOURCE%/}/" "$SG_USER@$SG_HOST:$SG_REMOTE_PATH/"
          fi
